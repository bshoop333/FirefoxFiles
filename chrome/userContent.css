@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

@-moz-document url("about:addons"),
url("chrome://mozapps/content/extensions/extensions.xul") {
    /*隐藏获取附加组件*/
    #category-discover {
        display: none;
    }
    /*隐藏说明*/
    .description-container {
        visibility: collapse;
    }
    /*显示计数*/
    #list-view #addon-list .addon[active="false"],
    #updates-view #addon-list .addon[active="false"] {
        counter-increment: disabled;
    }
    #list-view #addon-list .addon[active="true"],
    #updates-view #addon-list .addon[active="true"] {
        counter-increment: enabled;
    }
    #list-view #addon-list:after,
    #updates-view #addon-list:after {
        content: "("counter(enabled)"项启用, "counter(disabled)"项禁用)";
        position: fixed;
        top: 10px;
        left: 500px;
        color: #3366FF;
    }
    /*  显示ID */
    .addon::after {
        content: "ID: " attr(value);
        position: absolute;
        cursor: default;
    }
    /*-----------------右侧---------------------*/
    /*顶栏*/
    #header {
        margin: 0 !important;
        -moz-margin-end: 0;
        border-bottom: 1px #FFA500 solid;
    }
    #header-utils-btn {
        height: 24px;
        line-height: 24px;
        border: none;
        background: none;
    }
    /*次顶栏*/
    .view-header {
        -moz-margin-end: 0px;
        border-bottom: none;
        border-bottom: 1px #FFA500 solid;
    }
    .sorter {
        height: 24px;
    }
    /*greasemonkey链接*/
    #greasemonkey-sort-bar .text-link {
        margin-top: 5px;
    }
    /*隐藏userstyle-footer*/
    #userstyle-footer {
        display: none !important;
    }

    /*----------------------列表--------------------*/
    .view-pane > .list > scrollbox {
        padding-left: 10px !important;
        padding-right: 10px !important;
    }
    .content-container .icon-container {
        height: 32px !important;
    }
    .addon {
        padding: 0 !important;
    }
    .addon[selected] {
        background-color: rgba(196, 227, 255, 1) !important;
        border-inline-start: unset !important;
    }
    /*悬停项背景*/
    #view-port .addon:hover {
        background: rgba(196, 227, 255, 0.3);
    }
    /*禁用项背景*/
    .addon.addon-view[active="false"]:not([notification="warning"]) {
        background: rgba(33, 33, 33, 0.05);
    }
    /*不兼容项背景*/
    richlistitem[notification="warning"]:not([type="greasemonkey-user-script"]) {
        background: rgba(255, 255, 0, 0.1);
    }
    /*未验证扩展背景*/
    richlistitem.addon.addon-view>hbox.warning {
        display: none;
    }
}


@-moz-document url("about:addons") {
#search-list .addon:not([type="userstyle"])[status="installed"] .name-container > spacer,
#addon-list .addon:not([type="userstyle"])[status="installed"] .name-container > spacer,
#updates-list .addon:not([type="userstyle"])[status="installed"] .name-container > spacer
{
-moz-binding: url('data:application/xml,\
\
<?xml version="1.0"?>\%0A\
<bindings xmlns="http://www.mozilla.org/xbl">\%0A\
<binding id="addonversion">\%0A\
<implementation>\%0A\
<constructor>\%0A\
<![CDATA[\%0A\
var richlistitem = document.getBindingParent(this);\%0A\
\%0A\
var nameLabel = document.getAnonymousElementByAttribute(richlistitem, "anonid", "name");\%0A\
var label = richlistitem._version = document.createElement("label");\%0A\
label.setAttribute("anonid", label.className = "version");\%0A\
this.parentNode.insertBefore(label, nameLabel.nextSibling);\%0A\
var addon = richlistitem.mAddon;\%0A\
shouldShowVersionNumber(addon) ? label.value = addon.version : label.hidden = true;\%0A\
\%0A\
var str = \'this._icon.src = "";\\n\';\%0A\
richlistitem._initWithAddon = eval(`(${\%0A\
String.replace(richlistitem._initWithAddon, str, [str,\%0A\
" if (shouldShowVersionNumber(this.mAddon))",\%0A\
" this._version.value = this.mAddon.version;",\%0A\
" else",\%0A\
" this._version.hidden = true;\\n"\%0A\
].join("\\n"))\%0A\
})`);\%0A\
str = \'this._showStatus("update-available");\\n\';\%0A\
richlistitem.onNewInstall = eval(`(${\%0A\
String.replace(richlistitem.onNewInstall, str, str +\%0A\
" this._updateUpgradeInfo();"\%0A\
)\%0A\
})`);\%0A\
richlistitem._updateUpgradeInfo = function _updateUpgradeInfo() {\%0A\
// Only update the version string if we\'re displaying the upgrade info\%0A\
if (this.hasAttribute("upgrade") && shouldShowVersionNumber(this.mAddon))\%0A\
this._version.value = this.mManualUpdate.version;\%0A\
}\%0A\
]]>\%0A\
</constructor>\%0A\
</implementation>\%0A\
</binding>\%0A\
</bindings>\
\
');
}
}
